{"ast":null,"code":"var _jsxFileName = \"/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/src/Instancias.js\";\nimport React, { Component } from 'react';\nimport { Select } from 'react';\nconst Http = new XMLHttpRequest();\nconst url = 'https://l5r8oes3le.execute-api.us-east-1.amazonaws.com/dev';\nHttp.open(\"GET\", url); //Http.setRequestHeader(\"Access-Control-Request-Headers\", \"*\")\n//Http.setRequestHeader(\"Access-Control-Allow-Headers\",\"access-control-allow-methods\")\n\nHttp.setRequestHeader(\"Access-Control-Allow-Headers\", \"Access-Control-Allow-Origin,Content-Type,Access-Control-Allow-Credentials, X-PING, Access-Control-Allow-Methods,Content-Type,Authorization\");\nHttp.setRequestHeader(\"Access-Control-Allow-Origin\", \"http://site-cris-estatico.s3-website-us-east-1.amazonaws.com\");\nHttp.setRequestHeader(\"Content-Type\", \"application/json\");\nHttp.setRequestHeader(\"Access-Control-Allow-Credentials\", \"true\");\nHttp.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET\"); //Http.option.setRequestHeader\n\nclass Instancias extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      multiplo: [{\n        value: 'cris',\n        name: 'Cris'\n      }, {\n        value: 'troxa',\n        name: 'Troxa'\n      }],\n      selecionado: \"cris\",\n      regiaoslc: \"us-east-1\"\n    };\n\n    this.optiontab = () => {\n      for (let i = 0; i < this.multiplo.length; i++) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: this.multiplo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }\n        }, this.multiplo);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        selecionado: e.selecionado\n      });\n    };\n\n    this.handleRegiao = e => {\n      this.setState({\n        regiaoslc: e.target.value\n      });\n      console.log(this.state.regiaoslc);\n\n      switch (e.target.value) {\n        //chamada da API para criação do Bucket\n        case \"us-east-1\":\n          //Http.withCredentials = false\n\n          /*\n          console.log(Http)\n          Http.setRequestHeader('regiao', e.target.value)\n          Http.send( null );\n          let cristianotroxa = Http.response.json()\n          console.log( cristianotroxa )\n          console.log('cris')*/\n          const options = {\n            method: \"GET\",\n            headers: {\n              \"regiao\": \"us-east-1\"\n            }\n          };\n          const resultado = document.getElementById('resultado');\n          fetch(url, options).then(resp => resp.json()).then(json => {\n            //console.log(json.body.InstanceStatuses)\n            //const parseOBJ = json1 => JSON.parse(json1)\n            const instanceid = instancias => instancias.InstanceId;\n\n            const instancestatus = instanciasst => instanciasst.InstanceStatuses;\n\n            const finalI = json.body.InstanceStatuses.map(instanceid);\n            const finalS = json.body.InstanceStatuses.map(instancestatus);\n            console.log(finalS);\n            resultado.innerHTML = JSON.stringify(finalS, finalI);\n          });\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"enviar\",\n      onSubmit: this.envioAssincrono,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        fontSize: '19px'\n      },\n      type: \"text\",\n      placeholder: \"Regi\\xE3o\",\n      nome: \"region\",\n      value: this.state.regiaoslc,\n      onChange: e => this.handleRegiao(e),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"regiao\",\n      value: this.state.selecionado,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, this.state.multiplo.map((e, key) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: key,\n        value: e.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 28\n        }\n      }, e.name);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"resultado\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn\",\n      style: {\n        fontSize: '19px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Instancias;","map":{"version":3,"sources":["/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/src/Instancias.js"],"names":["React","Component","Select","Http","XMLHttpRequest","url","open","setRequestHeader","Instancias","state","multiplo","value","name","selecionado","regiaoslc","optiontab","i","length","handleChange","e","setState","handleRegiao","target","console","log","options","method","headers","resultado","document","getElementById","fetch","then","resp","json","instanceid","instancias","InstanceId","instancestatus","instanciasst","InstanceStatuses","finalI","body","map","finalS","innerHTML","JSON","stringify","render","envioAssincrono","fontSize","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Select} from 'react';\nconst Http = new XMLHttpRequest();\nconst url='https://l5r8oes3le.execute-api.us-east-1.amazonaws.com/dev';\nHttp.open(\"GET\", url);\n\n//Http.setRequestHeader(\"Access-Control-Request-Headers\", \"*\")\n//Http.setRequestHeader(\"Access-Control-Allow-Headers\",\"access-control-allow-methods\")\nHttp.setRequestHeader(\"Access-Control-Allow-Headers\",\"Access-Control-Allow-Origin,Content-Type,Access-Control-Allow-Credentials, X-PING, Access-Control-Allow-Methods,Content-Type,Authorization\")\nHttp.setRequestHeader(\"Access-Control-Allow-Origin\",\"http://site-cris-estatico.s3-website-us-east-1.amazonaws.com\")\nHttp.setRequestHeader(\"Content-Type\", \"application/json\")\nHttp.setRequestHeader(\"Access-Control-Allow-Credentials\", \"true\");\nHttp.setRequestHeader(\"Access-Control-Allow-Methods\", \"GET\");\n//Http.option.setRequestHeader\n\nclass Instancias extends Component {\n    state = {\n        multiplo : [\n            { value: 'cris', name: 'Cris' },\n            { value: 'troxa', name: 'Troxa' }\n        ],\n        selecionado: \"cris\",\n        regiaoslc: \"us-east-1\",\n        \n    }\n\n    optiontab = () => {\n        for(let i = 0; i < this.multiplo.length; i++){\n           return <option value={this.multiplo}>{this.multiplo}</option>   \n          }\n    }\n\n\n    handleChange = e => {\n        this.setState({selecionado: e.selecionado})\n    }\n\n    handleRegiao = e => {\n        this.setState({regiaoslc: e.target.value})\n        console.log(this.state.regiaoslc)\n\n        switch (e.target.value) {\n            //chamada da API para criação do Bucket\n            case \"us-east-1\":\n                //Http.withCredentials = false\n                /*\n                console.log(Http)\n                Http.setRequestHeader('regiao', e.target.value)\n                Http.send( null );\n                let cristianotroxa = Http.response.json()\n                console.log( cristianotroxa )\n                console.log('cris')*/\n                const options ={\n                    method: \"GET\",\n                    headers: {\"regiao\" : \"us-east-1\"}\n                }\n                const resultado = document.getElementById('resultado')\n                fetch(url, options)\n                    .then(resp => resp.json())\n                    .then(json => {\n                        //console.log(json.body.InstanceStatuses)\n                        //const parseOBJ = json1 => JSON.parse(json1)\n                        const instanceid = instancias => instancias.InstanceId\n                        const instancestatus = instanciasst => instanciasst.InstanceStatuses \n                        const finalI = json.body.InstanceStatuses.map(instanceid)\n                        const finalS = json.body.InstanceStatuses.map(instancestatus)\n                        console.log(finalS)\n                        resultado.innerHTML = JSON.stringify(finalS, finalI)\n                    })\n\n\n                break;\n            }\n\n    }\n\n    render() {\n        return (\n        <form className=\"enviar\"\n        onSubmit={this.envioAssincrono}>\n            <input style ={{fontSize:'19px'}}\n            type=\"text\"\n            placeholder=\"Região\"\n            nome=\"region\" \n            value= {this.state.regiaoslc}\n            onChange = {e => this.handleRegiao(e)}\n            required\n            />\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-md-4\"></div>\n            <div className=\"col-md-4\">\n\n                <select name=\"regiao\" \n                        value={this.state.selecionado} \n                        onChange={e => this.handleChange(e)}>\n                \n                {this.state.multiplo.map((e, key) => {\n                    return <option key={key} value={e.value}>{e.name}</option>;\n                })}\n\n            </select>\n            \n            </div>\n            <div className=\"col-md-4\"></div>\n            </div>\n            <div id=\"resultado\"></div>\n        </div>\n                <input type=\"submit\" \n                className=\"btn\"\n                style={{fontSize: '19px'}} />           \n        </form>\n    )}\n\n}\nexport default Instancias"]},"metadata":{},"sourceType":"module"}