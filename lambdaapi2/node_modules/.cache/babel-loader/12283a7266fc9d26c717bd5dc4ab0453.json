{"ast":null,"code":"import _classCallCheck from\"/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/lambdaapi2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/lambdaapi2/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/lambdaapi2/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/lambdaapi2/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Select}from'react';import CInstancias from'./Componentes/CInstancias.jsx';var Http=new XMLHttpRequest();var url='https://gxgurg4n08.execute-api.us-east-1.amazonaws.com/dev/ec2';var Instancias=/*#__PURE__*/function(_Component){_inherits(Instancias,_Component);var _super=_createSuper(Instancias);function Instancias(){var _this;_classCallCheck(this,Instancias);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={multiplo:[{value:'regiao',name:'Região'},{value:'us-east-1',name:'us-east-1 - Norte Virgínia'},{value:'us-east-2',name:'us-east-2 - Ohio'},{value:'us-west-1',name:'us-west-1 - Norte Califórnia'},{value:'us-west-2',name:'us-west-2 - Oregon'},{value:'ap-east-1',name:'ap-east-1 - Hong Kong'},{value:'ap-south-1',name:'ap-south-1 - Mumbai'},{value:'ap-northeast-2',name:'ap-northeast-1 - Seul'},{value:'ap-southeast-2',name:'ap-southeast-2 - Cingapura'},{value:'ap-northeast-1',name:'ap-northeast-1 - Tóquio'},{value:'ap-southeast-1',name:'ap-southeast-1 - Cingapura'},{value:'sa-east-1',name:'sa-east-1 - São Paulo'}],selecionado:\"cris\",instanciasAWS:null};_this.optiontab=function(){for(var i=0;i<_this.multiplo.length;i++){return/*#__PURE__*/React.createElement(\"option\",{value:_this.multiplo},_this.multiplo);}};_this.handleChange=function(e){_this.setState({selecionado:e.target.value});console.log(_this.state.regiaoslc);switch(e.target.value){//chamada da API para criação do Bucket\ncase\"us-east-1\":case\"us-east-2\":case\"us-west-1\":case\"us-west-2\":case\"ap-east-1\":case\"ap-east-2\":case\"ap-northeast-2\":case\"ap-southeast-2\":case\"ap-northeast-1\":case\"ap-southeast-1\":case\"sa-east-1\"://configuração da variável option usada na chamada de API Fetch\nvar options={method:\"GET\",headers:{\"regiao\":e.target.value}};fetch(url,options).then(function(resp){return resp.json();}).then(function(json){_this.setState({instanciasAWS:json.body.InstanceStatuses});});break;}};return _this;}_createClass(Instancias,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"form\",{className:\"enviar\",onSubmit:this.envioAssincrono},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},/*#__PURE__*/React.createElement(\"select\",{name:\"regiao\",value:this.state.selecionado,onChange:function onChange(e){return _this2.handleChange(e);}},this.state.multiplo.map(function(e,key){return/*#__PURE__*/React.createElement(\"option\",{key:key,value:e.value},e.name);}))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"})),this.state.instanciasAWS?/*#__PURE__*/React.createElement(\"div\",null,this.state.instanciasAWS.map(function(ist,idx){return/*#__PURE__*/React.createElement(CInstancias,{nome:ist.InstanceId,status:ist.InstanceState.Name,key:ist.InstanceIdx});}),\"  \"):null),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn\",style:{fontSize:'19px'}}));}}]);return Instancias;}(Component);export default Instancias;","map":{"version":3,"sources":["/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/lambdaapi2/src/Instancias.js"],"names":["React","Component","Select","CInstancias","Http","XMLHttpRequest","url","Instancias","state","multiplo","value","name","selecionado","instanciasAWS","optiontab","i","length","handleChange","e","setState","target","console","log","regiaoslc","options","method","headers","fetch","then","resp","json","body","InstanceStatuses","envioAssincrono","map","key","ist","idx","InstanceId","InstanceState","Name","InstanceIdx","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Select} from 'react';\nimport CInstancias from './Componentes/CInstancias.jsx'\n\nconst Http = new XMLHttpRequest();\nconst url='https://gxgurg4n08.execute-api.us-east-1.amazonaws.com/dev/ec2';\n\nclass Instancias extends Component {\n    state = {\n        multiplo : [\n            { value: 'regiao', name: 'Região' },\n            { value: 'us-east-1', name: 'us-east-1 - Norte Virgínia' },\n            { value: 'us-east-2', name: 'us-east-2 - Ohio' },\n            { value: 'us-west-1', name: 'us-west-1 - Norte Califórnia' },\n            { value: 'us-west-2', name: 'us-west-2 - Oregon' },\n\n            { value: 'ap-east-1', name: 'ap-east-1 - Hong Kong' },\n            { value: 'ap-south-1', name: 'ap-south-1 - Mumbai' },\n            { value: 'ap-northeast-2', name: 'ap-northeast-1 - Seul' },\n            { value: 'ap-southeast-2', name: 'ap-southeast-2 - Cingapura' },\n            { value: 'ap-northeast-1', name: 'ap-northeast-1 - Tóquio' },\n            { value: 'ap-southeast-1', name: 'ap-southeast-1 - Cingapura' },\n\n            { value: 'sa-east-1', name: 'sa-east-1 - São Paulo' }\n        ],\n        selecionado: \"cris\",\n        instanciasAWS: null\n        \n    }\n\n    optiontab = () => {\n        for(let i = 0; i < this.multiplo.length; i++){\n           return <option value={this.multiplo}>{this.multiplo}</option>   \n          }\n    }\n\n    //evento de seleção de Região da AWS e request de instâncias\n    handleChange = e => {\n        this.setState({selecionado: e.target.value})\n        console.log(this.state.regiaoslc)\n\n        switch (e.target.value) {\n            //chamada da API para criação do Bucket\n            case \"us-east-1\" :\n            case \"us-east-2\" :\n            case \"us-west-1\" :\n            case \"us-west-2\" :\n            case \"ap-east-1\" :\n            case \"ap-east-2\" :\n            case \"ap-northeast-2\" :\n            case \"ap-southeast-2\" :\n            case \"ap-northeast-1\" :\n            case \"ap-southeast-1\" :\n            case \"sa-east-1\":\n\n            //configuração da variável option usada na chamada de API Fetch\n                const options ={\n                    method: \"GET\",\n                    headers: {\"regiao\" : e.target.value}\n                }\n                \n                fetch(url, options)\n                    .then(resp => resp.json())\n                    .then(json => {\n                        this.setState({instanciasAWS:json.body.InstanceStatuses})\n                    })\n                break;\n            }\n    }\n\n\n    render() {\n        return (\n        <form className=\"enviar\"\n        onSubmit={this.envioAssincrono}>\n\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-md-4\"></div>\n            <div className=\"col-md-4\">\n\n                <select name=\"regiao\" \n                        value={this.state.selecionado} \n                        onChange={e => this.handleChange(e)}>\n                \n                {this.state.multiplo.map((e, key) => {\n                    return <option key={key} value={e.value}>{e.name}</option>;\n                })}\n\n            </select>\n            \n            </div>\n            <div className=\"col-md-4\"></div>\n            </div>\n            \n            { this.state.instanciasAWS ?\n            <div>\n            {this.state.instanciasAWS.map((ist, idx )=> {        \n                return <CInstancias nome={ist.InstanceId} status={ist.InstanceState.Name} \n                                    key={ist.InstanceIdx}  /> \n            })}  </div> :  null }   \n        </div>\n                <input type=\"submit\" \n                className=\"btn\"\n                style={{fontSize: '19px'}} />           \n        </form>\n    )}\n\n}\nexport default Instancias"]},"metadata":{},"sourceType":"module"}