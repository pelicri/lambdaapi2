{"ast":null,"code":"var _jsxFileName = \"/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/lambdaapi2/src/Instancias.js\";\nimport React, { Component } from 'react';\nimport { Select } from 'react';\nimport CInstancias from './Componentes/CInstancias.jsx';\nconst Http = new XMLHttpRequest();\nconst url = 'https://gxgurg4n08.execute-api.us-east-1.amazonaws.com/dev/ec2';\n\nclass Instancias extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      multiplo: [{\n        value: 'regiao',\n        name: 'Região'\n      }, {\n        value: 'us-east-1',\n        name: 'us-east-1 - Norte Virgínia'\n      }, {\n        value: 'us-east-2',\n        name: 'us-east-2 - Ohio'\n      }, {\n        value: 'us-west-1',\n        name: 'us-west-1 - Norte Califórnia'\n      }, {\n        value: 'us-west-2',\n        name: 'us-west-2 - Oregon'\n      }, {\n        value: 'ap-east-1',\n        name: 'ap-east-1 - Hong Kong'\n      }, {\n        value: 'ap-south-1',\n        name: 'ap-south-1 - Mumbai'\n      }, {\n        value: 'ap-northeast-2',\n        name: 'ap-northeast-1 - Seul'\n      }, {\n        value: 'ap-southeast-2',\n        name: 'ap-southeast-2 - Cingapura'\n      }, {\n        value: 'ap-northeast-1',\n        name: 'ap-northeast-1 - Tóquio'\n      }, {\n        value: 'ap-southeast-1',\n        name: 'ap-southeast-1 - Cingapura'\n      }, {\n        value: 'sa-east-1',\n        name: 'sa-east-1 - São Paulo'\n      }],\n      selecionado: \"cris\",\n      instanciasAWS: null\n    };\n\n    this.deleteHandler = instanciaIDX => {\n      const instancias = this.setState.instanciasAWS;\n      instancias.splice(instanciaIDX, 1);\n      this.setState({\n        instanciasAWS: instancias\n      });\n    };\n\n    this.optiontab = () => {\n      for (let i = 0; i < this.multiplo.length; i++) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: this.multiplo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }\n        }, this.multiplo);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        selecionado: e.target.value\n      });\n      console.log(this.state.regiaoslc);\n\n      switch (e.target.value) {\n        //chamada da API para criação do Bucket\n        case \"us-east-1\":\n        case \"us-east-2\":\n        case \"us-west-1\":\n        case \"us-west-2\":\n        case \"ap-east-1\":\n        case \"ap-east-2\":\n        case \"ap-northeast-2\":\n        case \"ap-southeast-2\":\n        case \"ap-northeast-1\":\n        case \"ap-southeast-1\":\n        case \"sa-east-1\":\n          //configuração da variável option usada na chamada de API Fetch\n          const options = {\n            method: \"GET\",\n            headers: {\n              \"regiao\": e.target.value\n            }\n          };\n          fetch(url, options).then(resp => resp.json()).then(json => {\n            this.setState({\n              instanciasAWS: json.body.InstanceStatuses\n            });\n          });\n          break;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"enviar\",\n      onSubmit: this.envioAssincrono,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"regiao\",\n      value: this.state.selecionado,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, this.state.multiplo.map((e, key) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: key,\n        value: e.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 28\n        }\n      }, e.name);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })), this.state.instanciasAWS ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, this.state.instanciasAWS.map((ist, idx) => {\n      return /*#__PURE__*/React.createElement(CInstancias, {\n        nome: ist.InstanceId,\n        status: ist.InstanceState.Name,\n        key: ist.InstanceIdx,\n        click: () => this.deleteHandler(inx),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 24\n        }\n      });\n    }), \"  \") : null), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn\",\n      style: {\n        fontSize: '19px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Instancias;","map":{"version":3,"sources":["/Users/cristianoandradre/Documents/treinamentoAWS/aws-pratico/Lambda/s3lambdaec2/lambdaapi2/src/Instancias.js"],"names":["React","Component","Select","CInstancias","Http","XMLHttpRequest","url","Instancias","state","multiplo","value","name","selecionado","instanciasAWS","deleteHandler","instanciaIDX","instancias","setState","splice","optiontab","i","length","handleChange","e","target","console","log","regiaoslc","options","method","headers","fetch","then","resp","json","body","InstanceStatuses","render","envioAssincrono","map","key","ist","idx","InstanceId","InstanceState","Name","InstanceIdx","inx","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Select} from 'react';\nimport CInstancias from './Componentes/CInstancias.jsx'\n\nconst Http = new XMLHttpRequest();\nconst url='https://gxgurg4n08.execute-api.us-east-1.amazonaws.com/dev/ec2';\n\nclass Instancias extends Component {\n    state = {\n        multiplo : [\n            { value: 'regiao', name: 'Região' },\n            { value: 'us-east-1', name: 'us-east-1 - Norte Virgínia' },\n            { value: 'us-east-2', name: 'us-east-2 - Ohio' },\n            { value: 'us-west-1', name: 'us-west-1 - Norte Califórnia' },\n            { value: 'us-west-2', name: 'us-west-2 - Oregon' },\n\n            { value: 'ap-east-1', name: 'ap-east-1 - Hong Kong' },\n            { value: 'ap-south-1', name: 'ap-south-1 - Mumbai' },\n            { value: 'ap-northeast-2', name: 'ap-northeast-1 - Seul' },\n            { value: 'ap-southeast-2', name: 'ap-southeast-2 - Cingapura' },\n            { value: 'ap-northeast-1', name: 'ap-northeast-1 - Tóquio' },\n            { value: 'ap-southeast-1', name: 'ap-southeast-1 - Cingapura' },\n\n            { value: 'sa-east-1', name: 'sa-east-1 - São Paulo' }\n        ],\n        selecionado: \"cris\",\n        instanciasAWS: null\n        \n    }\n\n    deleteHandler = (instanciaIDX) => {\n\n        const instancias = this.setState.instanciasAWS\n        instancias.splice(instanciaIDX, 1)\n        this.setState({instanciasAWS: instancias})\n\n    }\n\n    optiontab = () => {\n        for(let i = 0; i < this.multiplo.length; i++){\n           return <option value={this.multiplo}>{this.multiplo}</option>   \n          }\n    }\n\n    //evento de seleção de Região da AWS e request de instâncias\n    handleChange = e => {\n        this.setState({selecionado: e.target.value})\n        console.log(this.state.regiaoslc)\n\n        switch (e.target.value) {\n            //chamada da API para criação do Bucket\n            case \"us-east-1\" :\n            case \"us-east-2\" :\n            case \"us-west-1\" :\n            case \"us-west-2\" :\n            case \"ap-east-1\" :\n            case \"ap-east-2\" :\n            case \"ap-northeast-2\" :\n            case \"ap-southeast-2\" :\n            case \"ap-northeast-1\" :\n            case \"ap-southeast-1\" :\n            case \"sa-east-1\":\n\n            //configuração da variável option usada na chamada de API Fetch\n                const options ={\n                    method: \"GET\",\n                    headers: {\"regiao\" : e.target.value}\n                }\n                \n                fetch(url, options)\n                    .then(resp => resp.json())\n                    .then(json => {\n                        this.setState({instanciasAWS:json.body.InstanceStatuses})\n                    })\n                break;\n            }\n    }\n\n\n    render() {\n        return (\n        <form className=\"enviar\"\n        onSubmit={this.envioAssincrono}>\n\n        <div className=\"container\">\n            <div className=\"row\">\n            <div className=\"col-md-4\"></div>\n            <div className=\"col-md-4\">\n\n                <select name=\"regiao\" \n                        value={this.state.selecionado} \n                        onChange={e => this.handleChange(e)}>\n                \n                {this.state.multiplo.map((e, key) => {\n                    return <option key={key} \n                                   value={e.value}\n                                   >{e.name}</option>;\n                })}\n\n            </select>\n            \n            </div>\n            <div className=\"col-md-4\"></div>\n            </div>\n            \n            { this.state.instanciasAWS ?\n            <div>\n            {this.state.instanciasAWS.map((ist, idx )=> {        \n                return <CInstancias nome={ist.InstanceId} status={ist.InstanceState.Name} \n                                    key={ist.InstanceIdx} click={() => this.deleteHandler(inx)} /> \n            })}  </div> :  null }   \n        </div>\n                <input type=\"submit\" \n                className=\"btn\"\n                style={{fontSize: '19px'}} />           \n        </form>\n    )}\n\n}\nexport default Instancias"]},"metadata":{},"sourceType":"module"}